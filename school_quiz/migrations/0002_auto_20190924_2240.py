# Generated by Django 2.2.3 on 2019-09-25 05:40

import re

import django.core.validators
import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ('schools', '0006_auto_20190923_2227'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('school_courses', '0008_auto_20190924_1812'),
        ('school_quiz', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='mcqquestion',
            name='answer_order',
            field=models.CharField(blank=True, choices=[('content', 'Content'), ('none', 'None')], default='content',
                                   help_text='The order in which multichoice                     answer options are displayed                     to the user',
                                   max_length=30, null=True, verbose_name='Answer Order'),
        ),
        migrations.AlterField(
            model_name='mcqquestion',
            name='quiz',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='questions', to='school_quiz.Quiz', verbose_name='Quiz'),
        ),
        migrations.AlterField(
            model_name='quiz',
            name='answers_at_end',
            field=models.BooleanField(default=True,
                                      help_text='Correct answer is NOT shown after question. Answers displayed at the end.',
                                      verbose_name='Answers at end'),
        ),
        migrations.AlterField(
            model_name='sitting',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.SchoolStudent',
                                    verbose_name='Student'),
        ),
        migrations.CreateModel(
            name='HistoricalSitting',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('question_order', models.CharField(max_length=1024, validators=[
                    django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid',
                                                          message='Enter only digits separated by commas.')],
                                                    verbose_name='Question Order')),
                ('question_list', models.CharField(max_length=1024, validators=[
                    django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid',
                                                          message='Enter only digits separated by commas.')],
                                                   verbose_name='Question List')),
                ('incorrect_questions', models.CharField(blank=True, max_length=1024, validators=[
                    django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid',
                                                          message='Enter only digits separated by commas.')],
                                                         verbose_name='Incorrect questions')),
                ('current_score', models.IntegerField(verbose_name='Current Score')),
                ('complete', models.BooleanField(default=False, verbose_name='Complete')),
                ('user_answers', models.TextField(blank=True, default='{}', verbose_name='User Answers')),
                ('start', models.DateTimeField(blank=True, editable=False, verbose_name='Start')),
                ('end', models.DateTimeField(blank=True, null=True, verbose_name='End')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+',
                                   to=settings.AUTH_USER_MODEL)),
                ('quiz', models.ForeignKey(blank=True, db_constraint=False, null=True,
                                           on_delete=django.db.models.deletion.DO_NOTHING, related_name='+',
                                           to='school_quiz.Quiz', verbose_name='Quiz')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True,
                                           on_delete=django.db.models.deletion.DO_NOTHING, related_name='+',
                                           to='schools.SchoolStudent', verbose_name='Student')),
            ],
            options={
                'verbose_name': 'historical sitting',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalQuiz',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('title', models.CharField(max_length=60, verbose_name='Title')),
                ('description',
                 models.TextField(blank=True, help_text='a description of the quiz', verbose_name='Description')),
                ('slug', models.SlugField(editable=False, help_text='a user friendly url', max_length=60,
                                          verbose_name='user friendly url')),
                ('random_order', models.BooleanField(default=False,
                                                     help_text='Display the questions in a random order or as they are set?',
                                                     verbose_name='Random Order')),
                ('max_questions', models.PositiveIntegerField(blank=True,
                                                              help_text='Number of questions to be answered on each attempt.',
                                                              null=True, verbose_name='Max Questions')),
                ('answers_at_end', models.BooleanField(default=True,
                                                       help_text='Correct answer is NOT shown after question. Answers displayed at the end.',
                                                       verbose_name='Answers at end')),
                ('pass_mark',
                 models.SmallIntegerField(blank=True, default=0, help_text='Percentage required to pass exam.',
                                          validators=[django.core.validators.MaxValueValidator(100)],
                                          verbose_name='Pass Mark')),
                ('success_text',
                 models.TextField(blank=True, help_text='Displayed if user passes.', verbose_name='Success Text')),
                ('fail_text',
                 models.TextField(blank=True, help_text='Displayed if user fails.', verbose_name='Fail Text')),
                ('draft', models.BooleanField(blank=True, default=False,
                                              help_text='If yes, the quiz is not displayed in the quiz list and can only be taken by users who can edit quizzes.',
                                              verbose_name='Draft')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('course', models.ForeignKey(blank=True, db_constraint=False, null=True,
                                             on_delete=django.db.models.deletion.DO_NOTHING, related_name='+',
                                             to='school_courses.SchoolCourse', verbose_name='Course')),
                ('history_user',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+',
                                   to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Quiz',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProgress',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('score', models.CharField(max_length=1024, validators=[
                    django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid',
                                                          message='Enter only digits separated by commas.')],
                                           verbose_name='Score')),
                ('correct_answer', models.CharField(max_length=10, verbose_name='Correct Answers')),
                ('wrong_answer', models.CharField(max_length=10, verbose_name='Wrong Answers')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+',
                                   to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(blank=True, db_constraint=False, null=True,
                                              on_delete=django.db.models.deletion.DO_NOTHING, related_name='+',
                                              to='schools.SchoolStudent', verbose_name='Student')),
            ],
            options={
                'verbose_name': 'historical Student Progress',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMCQQuestion',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('figure', models.TextField(blank=True, max_length=100, null=True, verbose_name='Figure')),
                ('content',
                 models.CharField(help_text='Enter the question text that you want displayed', max_length=1000,
                                  null=True, verbose_name='Question')),
                ('explanation',
                 models.TextField(blank=True, help_text='Explanation to be shown after the question has been answered.',
                                  max_length=2000, verbose_name='Explanation')),
                ('answer_order',
                 models.CharField(blank=True, choices=[('content', 'Content'), ('none', 'None')], default='content',
                                  help_text='The order in which multichoice                     answer options are displayed                     to the user',
                                  max_length=30, null=True, verbose_name='Answer Order')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('course', models.ForeignKey(blank=True, db_constraint=False, null=True,
                                             on_delete=django.db.models.deletion.DO_NOTHING, related_name='+',
                                             to='school_courses.SchoolCourse', verbose_name='Course')),
                ('history_user',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+',
                                   to=settings.AUTH_USER_MODEL)),
                ('quiz', models.ForeignKey(blank=True, db_constraint=False, null=True,
                                           on_delete=django.db.models.deletion.DO_NOTHING, related_name='+',
                                           to='school_quiz.Quiz', verbose_name='Quiz')),
            ],
            options={
                'verbose_name': 'historical Multiple Choice Question',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAnswer',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('content', models.CharField(
                    help_text='Enter the answer text that                                             you want displayed',
                    max_length=1000, verbose_name='Content')),
                ('correct',
                 models.BooleanField(default=False, help_text='Is this a correct answer?', verbose_name='Correct')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+',
                                   to=settings.AUTH_USER_MODEL)),
                ('question', models.ForeignKey(blank=True, db_constraint=False, null=True,
                                               on_delete=django.db.models.deletion.DO_NOTHING, related_name='+',
                                               to='school_quiz.MCQQuestion', verbose_name='Question')),
            ],
            options={
                'verbose_name': 'historical Answer',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
