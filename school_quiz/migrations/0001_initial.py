# Generated by Django 2.2.3 on 2019-08-25 23:30

import re

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('school_courses', '0003_auto_20190821_2319'),
        ('schools', '0002_auto_20190817_1157'),
    ]

    operations = [
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60, verbose_name='Title')),
                ('description',
                 models.TextField(blank=True, help_text='a description of the quiz', verbose_name='Description')),
                ('slug', models.SlugField(editable=False, help_text='a user friendly url', max_length=60,
                                          verbose_name='user friendly url')),
                ('random_order', models.BooleanField(default=False,
                                                     help_text='Display the questions in a random order or as they are set?',
                                                     verbose_name='Random Order')),
                ('max_questions', models.PositiveIntegerField(blank=True,
                                                              help_text='Number of questions to be answered on each attempt.',
                                                              null=True, verbose_name='Max Questions')),
                ('answers_at_end', models.BooleanField(default=False,
                                                       help_text='Correct answer is NOT shown after question. Answers displayed at the end.',
                                                       verbose_name='Answers at end')),
                ('pass_mark',
                 models.SmallIntegerField(blank=True, default=0, help_text='Percentage required to pass exam.',
                                          validators=[django.core.validators.MaxValueValidator(100)],
                                          verbose_name='Pass Mark')),
                ('success_text',
                 models.TextField(blank=True, help_text='Displayed if user passes.', verbose_name='Success Text')),
                ('fail_text',
                 models.TextField(blank=True, help_text='Displayed if user fails.', verbose_name='Fail Text')),
                ('draft', models.BooleanField(blank=True, default=False,
                                              help_text='If yes, the quiz is not displayed in the quiz list and can only be taken by users who can edit quizzes.',
                                              verbose_name='Draft')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to='school_courses.SchoolCourse', verbose_name='Course')),
            ],
            options={
                'verbose_name': 'Quiz',
                'verbose_name_plural': 'Quizzes',
            },
        ),
        migrations.CreateModel(
            name='Sitting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_order', models.CharField(max_length=1024, validators=[
                    django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid',
                                                          message='Enter only digits separated by commas.')],
                                                    verbose_name='Question Order')),
                ('question_list', models.CharField(max_length=1024, validators=[
                    django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid',
                                                          message='Enter only digits separated by commas.')],
                                                   verbose_name='Question List')),
                ('incorrect_questions', models.CharField(blank=True, max_length=1024, validators=[
                    django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid',
                                                          message='Enter only digits separated by commas.')],
                                                         verbose_name='Incorrect questions')),
                ('current_score', models.IntegerField(verbose_name='Current Score')),
                ('complete', models.BooleanField(default=False, verbose_name='Complete')),
                ('user_answers', models.TextField(blank=True, default='{}', verbose_name='User Answers')),
                ('start', models.DateTimeField(auto_now_add=True, verbose_name='Start')),
                ('end', models.DateTimeField(blank=True, null=True, verbose_name='End')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_quiz.Quiz',
                                           verbose_name='Quiz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.SchoolStudent',
                                           verbose_name='User')),
            ],
            options={
                'permissions': (('view_sittings', 'Can see completed exams.'),),
            },
        ),
        migrations.CreateModel(
            name='Progress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.CharField(max_length=1024, validators=[
                    django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid',
                                                          message='Enter only digits separated by commas.')],
                                           verbose_name='Score')),
                ('correct_answer', models.CharField(max_length=10, verbose_name='Correct Answers')),
                ('wrong_answer', models.CharField(max_length=10, verbose_name='Wrong Answers')),
                ('student',
                 models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='schools.SchoolStudent',
                                      verbose_name='Student')),
            ],
            options={
                'verbose_name': 'Student Progress',
                'verbose_name_plural': 'Student progress records',
            },
        ),
        migrations.CreateModel(
            name='MCQQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('figure',
                 models.ImageField(blank=True, null=True, upload_to='uploads/%Y/%m/%d', verbose_name='Figure')),
                ('content',
                 models.CharField(help_text='Enter the question text that you want displayed', max_length=1000,
                                  null=True, verbose_name='Question')),
                ('explanation',
                 models.TextField(blank=True, help_text='Explanation to be shown after the question has been answered.',
                                  max_length=2000, verbose_name='Explanation')),
                ('answer_order', models.CharField(blank=True, choices=[('content', 'Content'), ('none', 'None')],
                                                  help_text='The order in which multichoice                     answer options are displayed                     to the user',
                                                  max_length=30, null=True, verbose_name='Answer Order')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             to='school_courses.SchoolCourse', verbose_name='Course')),
                ('quiz', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                           to='school_quiz.Quiz', verbose_name='Quiz')),
            ],
            options={
                'verbose_name': 'Multiple Choice Question',
                'verbose_name_plural': 'Multiple Choice Questions',
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(
                    help_text='Enter the answer text that                                             you want displayed',
                    max_length=1000, verbose_name='Content')),
                ('correct',
                 models.BooleanField(default=False, help_text='Is this a correct answer?', verbose_name='Correct')),
                ('question',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_quiz.MCQQuestion',
                                   verbose_name='Question')),
            ],
            options={
                'verbose_name': 'Answer',
                'verbose_name_plural': 'Answers',
            },
        ),
    ]
